# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mxwDq6nTncQ7IvOG-AW-p4GzwiwQzG2B
"""
import json

import telebot
import requests
import subprocess
import os
import time
from pymongo import MongoClient
import datetime
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


API_KEY = '5998904535:AAELoOdl7FYxl2iQ6WvI09-RbjxxcVJwvWE'
bot = telebot.TeleBot(API_KEY)
url = 'http://127.0.0.1:8000/api/audio/'
MERCHANT_ID = 'e3c89d7e-1f1f-444d-8006-cb217c5a9ccc'
pay_url = 'https://api.zarinpal.com/pg/v4/payment/request.json'

client = MongoClient('localhost', 27017)
vc_db = client['vc_db']
user = vc_db['user']
user_account = vc_db['user_account']
bot.set_my_commands([telebot.types.BotCommand('menu', description='menu')])



@bot.message_handler(content_types=['text'])
def show_options(msg):
    if msg.text == 'خرید سکه':
        markup = telebot.types.ReplyKeyboardMarkup()
        markup.add(telebot.types.KeyboardButton('100 سکه - 10,000 تومان'))
        markup.add(telebot.types.KeyboardButton('200 سکه - 18,000 تومان'))
        markup.add(telebot.types.KeyboardButton('500 سکه - 40,000 تومان'))
        markup.add(telebot.types.KeyboardButton('700 سکه - 50,000 تومان'))
        bot.send_message(msg.chat.id, "یکی از گزینه های خرید را انتخاب کنیید:", reply_markup=markup)
    if msg.text == 'مشاهده تعداد سکه ها':
        count = 0
        for q in user_account.find({'tg_id': msg.chat.username}):
            count += q.get('coins')
        bot.send_message(msg.chat.id, 'سکه باقیمانده حساب شما: ' + str(count))

    if msg.text == '100 سکه - 10,000 تومان':
        # res = requests.post(pay_url, json={
        #     "merchant_id": MERCHANT_ID,
        #     "amount": "10000",
        #     "currency": "IRT",
        #     "callback_url": "ekfnel",
        #     "description": "تست تراکنش بات تبدیل صدا"
        # }, headers={'Content-Type': 'application/json', 'Accept': 'application/json'})
        #
        # if json.loads(res.text)['data']['message'] == 'Success':
        #     bot.send_message(msg.chat.id, 'لطفا از طریق لینک زیر اقدام به پرداخت نمایید:')
        #     bot.send_message(msg.chat.id, 'https://www.zarinpal.com/pg/StartPay/' + json.loads(res.text)['data']['authority'])
        res = requests.post('http://127.0.0.1:8000/api/buy/'+msg.chat.username+'/'+'100/', json={
            "merchant_id": MERCHANT_ID,
            "amount": "10000",
            "currency": "IRT",
            "callback_url": "http://127.0.0.1:8000/api/buy/"+msg.chat.username+"/100/",
            "description": "تست تراکنش بات تبدیل صدا"
        }, headers={'Content-Type': 'application/json', 'Accept': 'application/json'})
        bot.send_message(msg.chat.id, 'لطفا از طریق لینک زیر اقدام به پرداخت نمایید:')
        bot.send_message(msg.chat.id, 'https://www.zarinpal.com/pg/StartPay/' + str(json.loads(json.loads(res.text))['data']['authority']))

    if msg.text == '200 سکه - 18,000 تومان':
        res = requests.post('http://127.0.0.1:8000/api/buy/' + msg.chat.username + '/' + '200/', json={
            "merchant_id": MERCHANT_ID,
            "amount": "20000",
            "currency": "IRT",
            "callback_url": "http://127.0.0.1:8000/api/buy/" + msg.chat.username + "/200/",
            "description": "تست تراکنش بات تبدیل صدا"
        }, headers={'Content-Type': 'application/json', 'Accept': 'application/json'})
        bot.send_message(msg.chat.id, 'لطفا از طریق لینک زیر اقدام به پرداخت نمایید:')
        bot.send_message(msg.chat.id, 'https://www.zarinpal.com/pg/StartPay/' + str(
            json.loads(json.loads(res.text))['data']['authority']))

    if msg.text == '500 سکه - 40,000 تومان':
        res = requests.post('http://127.0.0.1:8000/api/buy/' + msg.chat.username + '/' + '500/', json={
            "merchant_id": MERCHANT_ID,
            "amount": "40000",
            "currency": "IRT",
            "callback_url": "http://127.0.0.1:8000/api/buy/" + msg.chat.username + "/500/",
            "description": "تست تراکنش بات تبدیل صدا"
        }, headers={'Content-Type': 'application/json', 'Accept': 'application/json'})
        bot.send_message(msg.chat.id, 'لطفا از طریق لینک زیر اقدام به پرداخت نمایید:')
        bot.send_message(msg.chat.id, 'https://www.zarinpal.com/pg/StartPay/' + str(
            json.loads(json.loads(res.text))['data']['authority']))

    if msg.text == '700 سکه - 50,000 تومان':
        res = requests.post('http://127.0.0.1:8000/api/buy/' + msg.chat.username + '/' + '700/', json={
            "merchant_id": MERCHANT_ID,
            "amount": "50000",
            "currency": "IRT",
            "callback_url": "http://127.0.0.1:8000/api/buy/" + msg.chat.username + "/700/",
            "description": "تست تراکنش بات تبدیل صدا"
        }, headers={'Content-Type': 'application/json', 'Accept': 'application/json'})
        bot.send_message(msg.chat.id, 'لطفا از طریق لینک زیر اقدام به پرداخت نمایید:')
        bot.send_message(msg.chat.id, 'https://www.zarinpal.com/pg/StartPay/' + str(
            json.loads(json.loads(res.text))['data']['authority']))

    if msg.text == '/menu':
        markup = telebot.types.ReplyKeyboardMarkup()
        markup.add(telebot.types.KeyboardButton('خرید سکه'))
        markup.add(telebot.types.KeyboardButton('مشاهده تعداد سکه ها'))
        bot.send_message(msg.chat.id, "برای استفاده از بات به منوی زیر رجوع کنید:", reply_markup=markup)

    if msg.text == '/start':
        bot.send_message(msg.chat.id, "سلام! به بات تبدیل صدا خوش آمدید! برای شروع یک فایل صوتی آپلود کنید.")
        if user.count_documents({'tg_id': msg.chat.username}) == 0:
            try:
                user_account.insert_one({'tg_id': msg.chat.username, 'coins': 20, 'cause': 'initial_charge'})
                user.insert_one({'tg_id': msg.chat.username, 'join_date': datetime.datetime.now().strftime('%c')})
                bot.send_message(msg.chat.id,
                                 "20 سکه به حساب شما اضافه شد! با هر بار انجام عملیات تبدیل صدا یک سکه از شما کسر می شود. برای افزایش سکه نیز می توانید به منوی بات مراجعه کنید!")
            except:
                bot.send_message(msg.chat.id, 'لطفا دوباره امتحان کنید!')





@bot.message_handler(content_types=['document'])
def reply_back(msg):
    count = 0
    for q in user_account.find({'tg_id': msg.chat.username}):
        count += q.get('coins')

    if(count == 0):
        bot.send_message(msg.chat.id, 'تعداد سکه های شما تمام شده است! برای افزایش سکه به منوی بات مراجه فرمایید.')
        return
    bot.send_message(msg.chat.id, "لطفا چند لحظه منتظر بمانید...")
    f = bot.get_file(msg.document.file_id)
    r = requests.get("https://api.telegram.org/file/bot{0}/{1}".format(API_KEY, f.file_path))
    print(r)
    name = str(msg.chat.id) + msg.document.file_name

    try:
        res = requests.post(url, files={'audio_file': r.content}, data={'name': str(msg.chat.id) + msg.document.file_name,
                                                    'tg_id': msg.from_user.username})
        doc = open("output/freevc/" + name + '.wav', 'rb')
        bot.send_audio(msg.chat.id, doc)
        doc.close()
        os.remove('output/freevc/' + name + '.mp3')
        os.remove('output/freevc/' + name + '.wav')
        user_account.insert_one({'tg_id': msg.from_user.username, 'coins': -1, 'cause': 'vc_operation'})
    except:
        bot.send_message(msg.chat.id, 'مشکلی به وجود آمد. لطفا از صحت فایل آپلود شده اطمینان حاصل کنید')


@bot.message_handler(content_types=['voice'])
def reply_back(msg):
    count = 0
    for q in user_account.find({'tg_id': msg.chat.username}):
        count += q.get('coins')

    if (count == 0):
        bot.send_message(msg.chat.id, 'تعداد سکه های شما تمام شده است! برای افزایش سکه به منوی بات مراجه فرمایید.')
        return
    bot.send_message(msg.chat.id, "لطفا چند لحظه منتظر بمانید...")
    f = bot.get_file(msg.voice.file_id)
    r = requests.get("https://api.telegram.org/file/bot{0}/{1}".format(API_KEY, f.file_path))
    print(r)
    name = str(msg.chat.id) + str(msg.date)
    print(name)
    # open("d/" + name, "wb").write(r.content)
    # open("convert.txt", "w").write(name[:-4] + '|' + "d/" + name + '|' + "4.wav")

    try:
        res = requests.post(url, files={'audio_file': r.content},
                            data={'name': str(msg.chat.id) + str(msg.date),
                                  'tg_id': msg.from_user.username})
        doc = open("output/freevc/" + name + '.wav', 'rb')
        bot.send_audio(msg.chat.id, doc)
        doc.close()
        os.remove('output/freevc/' + name + '.mp3')
        os.remove('output/freevc/' + name + '.wav')
        user_account.insert_one({'tg_id': msg.from_user.username, 'coins': -1, 'cause': 'vc_operation'})
    except:
        bot.send_message(msg.chat.id, 'مشکلی به وجود آمد. لطفا از صحت فایل آپلود شده اطمینان حاصل کنید')



@bot.message_handler(content_types=['audio'])
def reply_back(msg):
    count = 0
    for q in user_account.find({'tg_id': msg.chat.username}):
        count += q.get('coins')

    if (count == 0):
        bot.send_message(msg.chat.id, 'تعداد سکه های شما تمام شده است! برای افزایش سکه به منوی بات مراجه فرمایید.')
        return
    bot.send_message(msg.chat.id, "لطفا چند لحظه منتظر بمانید...")
    f = bot.get_file(msg.audio.file_id)
    r = requests.get("https://api.telegram.org/file/bot{0}/{1}".format(API_KEY, f.file_path))
    print(r)
    name = str(msg.chat.id) + msg.audio.file_name
    print(name)

    try:
        res = requests.post(url, files={'audio_file': r.content},
                            data={'name': str(msg.chat.id) + msg.audio.file_name,
                                  'tg_id': msg.from_user.username})
        doc = open("output/freevc/" + name + '.wav', 'rb')
        bot.send_audio(msg.chat.id, doc)
        doc.close()
        os.remove('output/freevc/' + name + '.mp3')
        os.remove('output/freevc/' + name + '.wav')
        user_account.insert_one({'tg_id': msg.from_user.username, 'coins': -1, 'cause': 'vc_operation'})
    except:
        bot.send_message(msg.chat.id, 'مشکلی به وجود آمد. لطفا از صحت فایل آپلود شده اطمینان حاصل کنید')

    print(msg.from_user.username)


bot.polling()
